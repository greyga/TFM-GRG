# -*- coding: utf-8 -*-
"""COMPARACIONES DATOS+-genesmergedvcf

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1SfCE2hZ7gYhAgFjoSdKq8KNl5Q7iG9FW
"""

# Crear el dataframe "datos_Sin_HPOplus"
datos_Sin_HPOplus <- data.frame(
  Variante = c("ACTR2", "ALG8", "DUOX2", "LHX3", "SLC27A4", "THRB", "TRHR", "PTGER2", "ADRB2", "APOBEC3F", "SECISBP2", "ZNF532", "TG", "CARD10", "SCARF2", "HNMT", "TBX21", "CCDC116", "ARHGAP8", "PRR5-ARHGAP8", "APOBEC3H", "CYP2D7", "ZNF280A", "IYD", "TPO", "DUOXA1", "GLIS3", "SLC5A5", "RIC1", "PLA2G7"),
  Ranking = 1:30,
  Phenotypic_Score = rep(0, 30)
)

# Imprimir el dataframe
print(datos_Sin_HPOplus)

# Crear el DataFrame "datos_Asthmaplus"

# Crear el data frame
datos_Asthmaplus <- data.frame(Variante = c("PTGER2", "TBX21", "SLC27A4", "CARD10", "RIC1", "LHX3", "DUOX2", "ACTR2", "ALG8", "TRHR", "THRB", "APOBEC3F", "SECISBP2", "SCARF2", "HNMT", "CCDC116", "ARHGAP8", "APOBEC3H", "ZNF280A", "IYD", "TG", "TPO", "PRR5-ARHGAP8", "GP9", "GLIS3", "DUOXA1", "SLC5A5", "ADRB2", "ZNF532", "CYP2D7"),
                               Ranking = c(1:30),
                               Phenotypic_Score = c(0.920, 0.920, 0.849, 0.694, 1.000, 0.509, 0.505, 0.504, 0.502, 0.501, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.502, 0.500, 0.500, 0.500, 0.332, 0.502, 0.304, 1.000, 0.507, 0.500, 0.500, 0.000, 0.000, 0.000),
                               stringsAsFactors = FALSE
)

# Imprimir el data frame
print(datos_Asthmaplus)

str(datos_Asthmaplus)

# Crear el DataFrame "datos_Asthma_ARSplus"
datos_Asthma_ARSplus <- data.frame(
  Variante = c("SLC27A4", "PTGER2", "TBX21", "CARD10", "THRB", "RIC1", "SECISBP2", "LHX3", "DUOX2", "ACTR2", "ALG8", "TRHR", "APOBEC3F", "SCARF2", "HNMT", "CCDC116", "ALG8", "ARHGAP8", "TG", "ZNF280A", "IYD", "PRR5-ARHGAP8", "TPO", "GP9", "GLIS3", "DUOXA1", "SLC5A5", "ADRB2", "ZNF532", "CYP2D7"),
  Ranking = 1:30,
  Phenotypic_Score = c(1.000, 1.000, 1.000, 0.866, 0.755, 1.000, 0.536, 0.528, 0.509, 0.507, 0.507, 0.502, 0.500, 0.500, 0.501, 0.500, 0.502, 0.502, 0.388, 0.504, 0.500, 0.354, 0.504, 1.000, 0.507, 0.501, 0.501, 0.000, 0.000, 0.000)
)

# Imprimir el data frame
print(datos_Asthma_ARSplus)

# Crear el DataFrame "datos_Asthma_ARPplus"
datos_Asthma_ARPplus <- data.frame(
  Variante = c("PTGER2", "TBX21", "SLC27A4", "CARD10", "THRB", "SCARF2", "RIC1", "SECISBP2", "LHX3", "ACTR2", "DUOX2", "ALG8", "TRHR", "APOBEC3F", "HNMT", "CCDC116", "ARHGAP8", "ZNF280A", "APOBEC3H", "IYD", "TG", "TPO", "PRR5-ARHGAP8", "GP9", "GLIS3", "DUOXA1", "SLC5A5", "ADRB2", "ZNF532", "CYP2D7"),
  Ranking = 1:30,
  Phenotypic_Score = c(1.000, 1.000, 0.922, 0.742, 0.664, 0.586, 0.991, 0.532, 0.525, 0.505, 0.505, 0.502, 0.502, 0.500, 0.501, 0.500, 0.502, 0.500, 0.500, 0.500, 0.302, 0.504, 0.276, 0.991, 0.507, 0.500, 0.501, 0.000, 0.000, 0.000)
)

# Imprimir el data frame
print(datos_Asthma_ARPplus)

# Crear el DataFrame "datos_Ab_Resp_systemplus"
datos_Ab_Resp_systemplus <- data.frame(
  Variante = c("SLC27A4", "PTGER2", "TBX21", "THRB", "SECISBP2", "LHX3", "DUOX2", "ALG8", "ACTR2", "TRHR", "APOBEC3F", "CARD10", "SCARF2", "HNMT", "CCDC116", "ARHGAP8", "ZNF280A", "APOBEC3H", "IYD", "TPO", "GLIS3", "DUOXA1", "SLC5A5", "ADRB2", "ZNF532", "TG", "PRR5-ARHGAP8", "CYP2D7", "PLA2G7", "GP9"),
  Ranking = 1:30,
  Phenotypic_Score = c(1.000, 1.000, 1.000, 1.000, 0.541, 0.532, 0.514, 0.509, 0.506, 0.502, 0.500, 0.502, 0.500, 0.501, 0.500, 0.503, 0.500, 0.500, 0.500, 0.505, 0.507, 0.501, 0.501, 0.000, 0.000, 0.500, 0.000, 0.000, 0.506, 0.501)
)

# Imprimir el data frame
print(datos_Ab_Resp_systemplus)

# Crear el DataFrame "datos_Asthma_Ig_hypersplus"
datos_Asthma_Ig_hypersplus <- data.frame(
  Variante = c("PTGER2", "TBX21", "SLC27A4", "CARD10", "RIC1", "LHX3", "ACTR2", "DUOX2", "ALG8", "THRB", "TRHR", "APOBEC3F", "SECISBP2", "SCARF2", "HNMT", "CCDC116", "ARHGAP8", "ZNF280A", "APOBEC3H", "IYD", "TG", "PRR5-ARHGAP8", "TPO", "GP9", "GLIS3", "DUOXA1", "SLC5A5", "ADRB2", "ZNF532", "CYP2D7"),
  Ranking = 1:30,
  Phenotypic_Score = c(0.930, 0.930, 0.886, 0.722, 0.984, 0.509, 0.505, 0.505, 0.502, 0.502, 0.501, 0.500, 0.500, 0.500, 0.500, 0.500, 0.502, 0.504, 0.500, 0.500, 0.353, 0.326, 0.503, 0.984, 0.507, 0.500, 0.500, 0.000, 0.000, 0.000)
)

# Imprimir el data frame
print(datos_Asthma_Ig_hypersplus)

# Crear el DataFrame "datos_Asthma_Abnormality_Igsystemplus"
datos_Asthma_Abnormality_Igsystemplus <- data.frame(
  Variante = c("SLC27A4", "PTGER2", "TBX21", "CARD10", "RIC1", "THRB", "SECISBP2", "LHX3", "DUOX2", "ACTR2", "ALG8", "TRHR", "APOBEC3F", "SCARF2", "HNMT", "CCDC116", "ARHGAP8", "TG", "ZNF280A", "APOBEC3H", "IYD", "PRR5-ARHGAP8", "TPO", "GP9", "GLIS3", "DUOXA1", "SLC5A5", "ADRB2", "ZNF532", "CYP2D7"),
  Ranking = 1:30,
  Phenotypic_Score = c(1.000, 1.000, 1.000, 0.866, 1.000, 0.531, 0.526, 0.510, 0.509, 0.507, 0.503, 0.502, 0.500, 0.500, 0.500, 0.500, 0.502, 0.388, 0.504, 0.500, 0.500, 0.354, 0.503, 1.000, 0.507, 0.500, 0.500, 0.000, 0.000, 0.000)
)

# Imprimir el data frame
print(datos_Asthma_Abnormality_Igsystemplus)

# Crear el DataFrame "datos_Ab_endocrine_systemplus"
datos_Ab_endocrine_systemplus <- data.frame(
  Variante = c("DUOX2", "TG", "THRB", "ALG8", "TRHR", "LHX3", "CARD10", "PTGER2", "ACTR2", "SLC27A4", "APOBEC3F", "SECISBP2", "SCARF2", "TBX21", "HNMT", "CCDC116", "IYD", "ARHGAP8", "APOBEC3H", "ZNF280A", "TPO", "SLC5A5", "GLIS3", "DUOXA1", "ADRB2", "ZNF532", "PRR5-ARHGAP8", "CYP2D7", "PLA2G7", "GP9"),
  Ranking = 1:30,
  Phenotypic_Score = c(0.578, 0.578, 0.565, 0.562, 0.556, 0.511, 0.508, 0.502, 0.500, 0.500, 0.500, 0.500, 0.500, 0.502, 0.500, 0.500, 0.599, 0.501, 0.500, 0.500, 0.585, 0.599, 0.539, 0.500, 0.000, 0.000, 0.000, 0.501, 0.501, 0.501)
)

# Imprimir el data frame
print(datos_Ab_endocrine_systemplus)

# Crear el DataFrame "datos_all_HPOSplus"

datos_all_HPOSplus <- data.frame(
  Variante = c("SECISBP2", "THRB", "TRHR", "DUOX2", "TG", "ALG8", "SLC27A4", "PTGER2", "TBX21", "CARD10", "IYD", "LHX3", "TPO", "ACTR2", "APOBEC3F", "SCARF2", "HNMT", "CCDC116", "ARHGAP8", "SLC5A5", "APOBEC3H", "ZNF280A", "RIC1", "DUOXA1", "GLIS3", "PRR5-ARHGAP8", "ADRB2", "ZNF532", "CYP2D7", "GP9"),
  Ranking = 1:30,
  Phenotypic_Score = c(0.863, 0.853, 0.791, 0.777, 0.777, 0.746, 0.675, 0.667, 0.667, 0.641, 0.777, 0.547, 0.796, 0.504, 0.5, 0.5, 0.5, 0.5, 0.5, 0.777, 0.5, 0.5, 0.609, 0.515, 0.505, 0.192, 0.000, 0.000, 0.000, 0.655)
)

# Imprimir el data frame
print(datos_all_HPOSplus)

# Crear el DataFrame "datos_Decreased_T4plus"
datos_Decreased_T4plus <- data.frame(
  Variante = c("TRHR", "SECISBP2", "THRB", "DUOX2", "TG", "ALG8", "IYD", "TPO", "LHX3", "PTGER2", "ACTR2", "SLC27A4", "APOBEC3F", "CARD10", "SCARF2", "HNMT", "TBX21", "CCDC116", "ARHGAP8", "SLC5A5", "ZNF280A", "APOBEC3H", "GLIS3", "DUOXA1", "ADRB2", "ZNF532", "PRR5-ARHGAP8", "CYP2D7", "PLA2G7", "GP9"),
  Ranking = 1:30,
  Phenotypic_Score = c(0.916, 0.818, 0.748, 0.742, 0.742, 0.720, 0.742, 0.839, 0.530, 0.503, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.742, 0.500, 0.500, 0.530, 0.514, 0.000, 0.000, 0.000, 0.000, 0.500, 0.500)
)

# Imprimir el data frame
print(datos_Decreased_T4plus)

# Crear el DataFrame "datos_Decreased_T4_Abnormal_circulating_T4_concentrationplus"
datos_Decreased_T4_Abnormal_circulating_T4_concentrationplus <- data.frame(
  Variante = c("TRHR", "SECISBP2", "THRB", "DUOX2", "TG", "ALG8", "IYD", "TPO", "LHX3", "PTGER2", "ACTR2", "SLC27A4", "APOBEC3F", "CARD10", "SCARF2", "HNMT", "TBX21", "CCDC116", "ARHGAP8", "SLC5A5", "ZNF280A", "APOBEC3H", "GLIS3", "DUOXA1", "ADRB2", "ZNF532", "PRR5-ARHGAP8", "CYP2D7", "PLA2G7", "GP9"),
  Ranking = 1:30,
  Phenotypic_Score = c(0.937, 0.859, 0.789, 0.766, 0.766, 0.750, 0.766, 0.869, 0.547, 0.503, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.766, 0.500, 0.500, 0.558, 0.515, 0.000, 0.000, 0.000, 0.000, 0.500, 0.500)
)

# Imprimir el data frame
print(datos_Decreased_T4_Abnormal_circulating_T4_concentrationplus)

# Crear el DataFrame "datos_Increased_T4plus"
datos_Increased_T4plus <- data.frame(
  Variante = c("SECISBP2", "TRHR", "THRB", "TG", "DUOX2", "ALG8", "IYD", "PTGER2", "LHX3", "SLC27A4", "ACTR2", "APOBEC3F", "CARD10", "SCARF2", "TPO", "HNMT", "TBX21", "CCDC116", "ARHGAP8", "ZNF280A", "APOBEC3H", "SLC5A5", "DUOXA1", "GLIS3", "ADRB2", "ZNF532", "PRR5-ARHGAP8", "CYP2D7", "PLA2G7", "GP9"),
  Ranking = 1:30,
  Phenotypic_Score = c(0.853, 0.789, 0.777, 0.658, 0.644, 0.622, 0.644, 0.503, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.726, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.644, 0.512, 0.500, 0.000, 0.000, 0.000, 0.000, 0.500, 0.500)
)

# Imprimir el data frame
print(datos_Increased_T4plus)

# Crear el DataFrame "datos_increased_T4_Abnormal_T4plus"
datos_increased_T4_Abnormal_T4plus <- data.frame(
  Variante = c("SECISBP2", "TRHR", "THRB", "TG", "DUOX2", "ALG8", "IYD", "TPO", "LHX3", "PTGER2", "SLC27A4", "ACTR2", "APOBEC3F", "CARD10", "SCARF2", "HNMT", "TBX21", "CCDC116", "ARHGAP8", "ZNF280A", "APOBEC3H", "SLC5A5", "GLIS3", "DUOXA1", "ADRB2", "ZNF532", "PRR5-ARHGAP8", "CYP2D7", "PLA2G7", "GP9"),
  Ranking = 1:30,
  Phenotypic_Score = c(0.889, 0.843, 0.814, 0.708, 0.688, 0.672, 0.688, 0.782, 0.511, 0.503, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.500, 0.688, 0.522, 0.513, 0.000, 0.000, 0.000, 0.000, 0.500, 0.500)
)

# Imprimir el data frame
print(datos_increased_T4_Abnormal_T4plus)

"""Análisis de resultados para variantes relacionadas con ASTHMA"""

# Función para filtrar y comparar variantes en múltiples data frames
filtrar_y_comparar <- function(variantes, data_frames) {
  resultados <- list()  # Lista para almacenar los resultados
  
  # Iterar sobre cada data frame
  for (i in seq_along(data_frames)) {
    df <- data_frames[[i]]  # Obtener el data frame actual
    
    # Filtrar por variantes
    df_filtrado <- df[df$Variante %in% variantes, ]
    
    # Almacenar resultados
    resultados[[i]] <- df_filtrado
  }
  
  return(resultados)
}

# Lista de data frames
data_frames <- list(
  datos_Sin_HPOplus,
  datos_Asthmaplus,
  datos_Asthma_ARSplus,
  datos_Asthma_ARPplus,
  datos_Ab_Resp_systemplus,
  datos_Asthma_Ig_hypersplus,
  datos_Asthma_Abnormality_Igsystemplus,
  datos_Ab_endocrine_systemplus,
  datos_Decreased_T4plus,
  datos_Decreased_T4_Abnormal_circulating_T4_concentrationplus,
  datos_Increased_T4plus,
  datos_increased_T4_Abnormal_T4plus,
  datos_all_HPOSplus
)

# Nombres de los data frames
nombres_df <- c("datos_Sin_HPOplus", "datos_Asthmaplus", "datos_Asthma_ARSplus", "datos_Asthma_ARPplus", "datos_Ab_Resp_systemplus", "datos_Asthma_Ig_hypersplus", "datos_Asthma_Abnormality_Igsystemplus", "datos_Ab_endocrine_systemplus", "datos_Ab_endocrine_systemplus", "datos_Decreased_T4plus", "datos_Decreased_T4_Abnormal_circulating_T4_concentrationplus", "datos_Increased_T4plus", "datos_increased_T4_Abnormal_T4plus", "datos_all_HPOSplus")

# Variantes que deseas buscar
variantes <- c("PTGER2", "ADRB2", "HNMT", "TBX21", "PLA2G7", "SLC27A4", "CARD10", "RIC1", "GP9", "IL21R")

# Filtrar y comparar las variantes en los data frames
resultados <- filtrar_y_comparar(variantes, data_frames)

# Imprimir resultados
for (i in seq_along(resultados)) {
  nombre_df <- nombres_df[i]
  cat("Resultados del data frame", nombre_df, ":\n")
  print(resultados[[i]])
  cat("\n")
}

datos_Sin_HPOplusA <- data.frame(
  Variante = c("SLC27A4", "PTGER2", "ADRB2", "CARD10", "HNMT", "TBX21", "RIC1", "PLA2G7"),
  Ranking = c(5, 8, 9, 14, 16, 17, 29, 30),
  Phenotypic_Score = c(0, 0, 0, 0, 0, 0, 0, 0)
)

datos_Sin_HPOplusA

# datos_AsthmaplusA
datos_AsthmaplusA <- data.frame(
  Variante = c("PTGER2", "TBX21", "SLC27A4", "CARD10", "RIC1", "HNMT", "GP9", "ADRB2"),
  Ranking = c(1, 2, 3, 4, 5, 15, 24, 28),
  Phenotypic_Score = c(0.920, 0.920, 0.849, 0.694, 1.000, 0.500, 1.000, 0.000)
)

datos_AsthmaplusA

# datos_Asthma_ARSplusA
datos_Asthma_ARSplusA <- data.frame(
  Variante = c("SLC27A4", "PTGER2", "TBX21", "CARD10", "RIC1", "HNMT", "GP9", "ADRB2"),
  Ranking = c(1, 2, 3, 4, 6, 15, 24, 28),
  Phenotypic_Score = c(1.000, 1.000, 1.000, 0.866, 1.000, 0.501, 1.000, 0.000)
)

datos_Asthma_ARSplusA

# datos_Asthma_ARPplusA
datos_Asthma_ARPplusA <- data.frame(
  Variante = c("PTGER2", "TBX21", "SLC27A4", "CARD10", "RIC1", "HNMT", "GP9", "ADRB2"),
  Ranking = c(1, 2, 3, 4, 7, 15, 24, 28),
  Phenotypic_Score = c(1.000, 1.000, 0.922, 0.742, 0.991, 0.501, 0.991, 0.000)
)

datos_Asthma_ARPplusA

# datos_Ab_Resp_systemplusA
datos_Ab_Resp_systemplusA <- data.frame(
  Variante = c("SLC27A4", "PTGER2", "TBX21", "CARD10", "HNMT", "ADRB2", "PLA2G7", "GP9"),
  Ranking = c(1, 2, 3, 12, 14, 24, 29, 30),
  Phenotypic_Score = c(1.000, 1.000, 1.000, 0.502, 0.501, 0.000, 0.506, 0.501)
)

datos_Ab_Resp_systemplusA

# datos_Asthma_Ig_hypersplusA
datos_Asthma_Ig_hypersplusA <- data.frame(
  Variante = c("PTGER2", "TBX21", "SLC27A4", "CARD10", "RIC1", "HNMT", "GP9", "ADRB2"),
  Ranking = c(1, 2, 3, 4, 5, 15, 24, 28),
  Phenotypic_Score = c(0.930, 0.930, 0.886, 0.722, 0.984, 0.500, 0.984, 0.000)
)

datos_Asthma_Ig_hypersplusA

# datos_Asthma_Abnormality_IgsystemplusA
datos_Asthma_Abnormality_IgsystemplusA <- data.frame(
  Variante = c("SLC27A4", "PTGER2", "TBX21", "CARD10", "RIC1", "HNMT", "GP9", "ADRB2"),
  Ranking = c(1, 2, 3, 4, 5, 15, 24, 28),
  Phenotypic_Score = c(1.000, 1.000, 1.000, 0.866, 1.000, 0.500, 1.000, 0.000)
)

datos_Asthma_Abnormality_IgsystemplusA

# datos_Ab_endocrine_systemplusA
datos_Ab_endocrine_systemplusA <- data.frame(
  Variante = c("CARD10", "PTGER2", "SLC27A4", "TBX21", "HNMT", "ADRB2", "PLA2G7", "GP9"),
  Ranking = c(7, 8, 10, 14, 15, 25, 29, 30),
  Phenotypic_Score = c(0.508, 0.502, 0.500, 0.502, 0.500, 0.000, 0.501, 0.501)
)

datos_Ab_endocrine_systemplusA

# datos_Ab_endocrine_systemplusA
datos_Ab_endocrine_systemplusA <- data.frame(
  Variante = c("PTGER2", "SLC27A4", "CARD10", "HNMT", "TBX21", "ADRB2", "PLA2G7", "GP9"),
  Ranking = c(10, 12, 14, 16, 17, 25, 29, 30),
  Phenotypic_Score = c(0.503, 0.500, 0.500, 0.500, 0.500, 0.000, 0.500, 0.500)
)

datos_Ab_endocrine_systemplusA

# datos_Decreased_T4plusA
datos_Decreased_T4plusA <- data.frame(
  Variante = c("PTGER2", "SLC27A4", "CARD10", "HNMT", "TBX21", "ADRB2", "PLA2G7", "GP9"),
  Ranking = c(10, 12, 14, 16, 17, 25, 29, 30),
  Phenotypic_Score = c(0.503, 0.500, 0.500, 0.500, 0.500, 0.000, 0.500, 0.500)
)

datos_Decreased_T4plusA

# datos_Decreased_T4_Abnormal_circulating_T4_concentrationplusA
datos_Decreased_T4_Abnormal_circulating_T4_concentrationplusA <- data.frame(
  Variante = c("PTGER2", "SLC27A4", "CARD10", "HNMT", "TBX21", "ADRB2", "PLA2G7", "GP9"),
  Ranking = c(8, 10, 13, 16, 17, 25, 29, 30),
  Phenotypic_Score = c(0.503, 0.500, 0.500, 0.500, 0.500, 0.000, 0.500, 0.500)
)

datos_Decreased_T4_Abnormal_circulating_T4_concentrationplusA

# datos_Increased_T4plusA
datos_Increased_T4plusA <- data.frame(
  Variante = c("PTGER2", "SLC27A4", "CARD10", "HNMT", "TBX21", "ADRB2", "PLA2G7", "GP9"),
  Ranking = c(10, 11, 14, 16, 17, 25, 29, 30),
  Phenotypic_Score = c(0.503, 0.500, 0.500, 0.500, 0.500, 0.000, 0.500, 0.500)
)

datos_Increased_T4plusA

# datos_increased_T4_Abnormal_T4plusA
datos_increased_T4_Abnormal_T4plusA <- data.frame(
  Variante = c("SLC27A4", "PTGER2", "TBX21", "CARD10", "HNMT", "RIC1", "ADRB2", "GP9"),
  Ranking = c(7, 8, 9, 10, 17, 23, 27, 30),
  Phenotypic_Score = c(0.675, 0.667, 0.667, 0.641, 0.500, 0.609, 0.000, 0.655)
)

datos_increased_T4_Abnormal_T4plusA

library(ggplot2)

# Definir los colores para cada variante
colores <- c("PTGER2" = "lightblue", "ADRB2" = "lightblue", "HNMT" = "lightblue", "TBX21" = "lightblue", "PLA2G7" = "lightblue",
             "SLC27A4" = "darkblue", "CARD10" = "darkblue", "RIC1" = "darkblue", "GP9" = "darkblue", "IL21R" = "darkblue")

# Función para ordenar el ranking de mayor a menor
ordenar_ranking <- function(df) {
  df$Ranking <- factor(df$Ranking, levels = rev(unique(df$Ranking)))
  df
}

# Gráfico de barras para datos_Sin_HPOplusA
ggplot(ordenar_ranking(datos_Sin_HPOplusA), aes(x = Variante, y = Ranking, fill = Variante)) +
  geom_bar(stat = "identity") +
  scale_fill_manual(values = colores) +
  labs(title = "Ranking de las variantes en datos_Sin_HPOplusA", x = "Variante", y = "Ranking")

# Gráfico de barras para datos_AsthmaplusA
ggplot(ordenar_ranking(datos_AsthmaplusA), aes(x = Variante, y = Ranking, fill = Variante)) +
  geom_bar(stat = "identity") +
  scale_fill_manual(values = colores) +
  labs(title = "Ranking de las variantes en datos_AsthmaplusA", x = "Variante", y = "Ranking")

# Gráfico de barras para datos_Asthma_ARSplusA
ggplot(ordenar_ranking(datos_Asthma_ARSplusA), aes(x = Variante, y = Ranking, fill = Variante)) +
  geom_bar(stat = "identity") +
  scale_fill_manual(values = colores) +
  labs(title = "Ranking de las variantes en datos_Asthma_ARSplusA", x = "Variante", y = "Ranking")

# Gráfico de barras para datos_Asthma_ARPplusA
ggplot(ordenar_ranking(datos_Asthma_ARPplusA), aes(x = Variante, y = Ranking, fill = Variante)) +
  geom_bar(stat = "identity") +
  scale_fill_manual(values = colores) +
  labs(title = "Ranking de las variantes en datos_Asthma_ARPplusA", x = "Variante", y = "Ranking")

# Gráfico de barras para datos_Ab_Resp_systemplusA
ggplot(ordenar_ranking(datos_Ab_Resp_systemplusA), aes(x = Variante, y = Ranking, fill = Variante)) +
  geom_bar(stat = "identity") +
  scale_fill_manual(values = colores) +
  labs(title = "Ranking de las variantes en datos_Ab_Resp_systemplusA", x = "Variante", y = "Ranking")

# Gráfico de barras para datos_Asthma_Ig_hypersplusA
ggplot(ordenar_ranking(datos_Asthma_Ig_hypersplusA), aes(x = Variante, y = Ranking, fill = Variante)) +
  geom_bar(stat = "identity") +
  scale_fill_manual(values = colores) +
  labs(title = "Ranking de las variantes en datos_Asthma_Ig_hypersplusA", x = "Variante", y = "Ranking")

# Gráfico de barras para datos_Asthma_Abnormality_IgsystemplusA
ggplot(ordenar_ranking(datos_Asthma_Abnormality_IgsystemplusA), aes(x = Variante, y = Ranking, fill = Variante)) +
  geom_bar(stat = "identity") +
  scale_fill_manual(values = colores) +
  labs(title = "Ranking de las variantes en datos_Asthma_Abnormality_IgsystemplusA", x = "Variante", y = "Ranking")

# Definir los colores para cada variante
colores <- c("PTGER2" = "lightblue", "ADRB2" = "lightblue", "HNMT" = "lightblue", "TBX21" = "lightblue", "PLA2G7" = "lightblue",
             "SLC27A4" = "darkblue", "CARD10" = "darkblue", "RIC1" = "darkblue", "GP9" = "darkblue", "IL21R" = "darkblue")

# Definir lista_data_frames
lista_data_frames <- list(datos_Sin_HPOplusA, datos_AsthmaplusA, datos_Asthma_ARSplusA, datos_Asthma_ARPplusA,
                          datos_Ab_Resp_systemplusA, datos_Asthma_Ig_hypersplusA, datos_Asthma_Abnormality_IgsystemplusA)

# Asignar nombres a los data frames
names(lista_data_frames) <- c("datos_Sin_HPOplusA", "datos_AsthmaplusA", "datos_Asthma_ARSplusA", "datos_Asthma_ARPplusA",
                              "datos_Ab_Resp_systemplusA", "datos_Asthma_Ig_hypersplusA", "datos_Asthma_Abnormality_IgsystemplusA")
      
# Función para ordenar el ranking de mayor a menor
ordenar_ranking <- function(df) {
  df$Ranking <- factor(df$Ranking, levels = rev(unique(df$Ranking)))
  df
}

# Obtener las variantes que desaparecen del ranking de las 30 primeras en cada data frame y marcarlas con el color correspondiente
variantes_desaparecidas <- list()
for (i in 1:length(lista_data_frames)) {
  df <- lista_data_frames[[i]]
  variantes_desaparecidas[[i]] <- setdiff(variantes, df$Variante)

  # Gráfico de barras para cada data frame con las variantes desaparecidas marcadas
  p <- ggplot(ordenar_ranking(df), aes(x = Variante, y = Ranking, fill = Variante)) +
    geom_bar(stat = "identity") +
    scale_fill_manual(values = colores) +
    labs(title = paste("Ranking de las variantes en", names(lista_data_frames)[i]), x = "Variante", y = "Ranking")

  if (length(variantes_desaparecidas[[i]]) > 0) {
    p <- p + geom_text(data = data.frame(Variante = variantes_desaparecidas[[i]], Phenotypic_Score = 0),
                       aes(x = Variante, y = Phenotypic_Score, label = Variante),
                       color = "red", vjust = -0.5, size = 3)
  }

  print(p)
}

names(lista_data_frames)[i]

# Crear una función para obtener el ranking medio y el phenotypic score medio de cada variante en los data frames
obtener_ranking_phenotypic_score <- function(variante) {
  ranking_medio <- c()
  phenotypic_score_medio <- c()
  ranking_max <- 0
  phenotypic_score_max <- 0
  data_frame_max <- ""

  for (i in 1:length(lista_data_frames)) {
    df <- lista_data_frames[[i]]
    if (variante %in% df$Variante) {
      ranking <- df[df$Variante == variante, "Ranking"]
      if (!is.na(ranking)) {
        ranking_medio <- c(ranking_medio, mean(ranking))
      }
      
      phenotypic_score <- df[df$Variante == variante, "Phenotypic_Score"]
      if (!is.na(phenotypic_score)) {
        phenotypic_score_medio <- c(phenotypic_score_medio, mean(phenotypic_score))
      }

      if (!is.na(ranking) && max(ranking) > ranking_max) {
        ranking_max <- max(ranking)
        phenotypic_score_max <- max(phenotypic_score)
        data_frame_max <- names(lista_data_frames)[i]
      }
    }
  }

  list(
    ranking_medio = ranking_medio,
    phenotypic_score_medio = phenotypic_score_medio,
    ranking_max = ranking_max,
    phenotypic_score_max = phenotypic_score_max,
    data_frame_max = data_frame_max
  )
}

# Obtener el ranking medio y el phenotypic score medio para cada variante en todos los data frames
ranking_medio_total <- c()
phenotypic_score_medio_total <- c()
ranking_max_total <- 0
phenotypic_score_max_total <- 0
data_frame_max_total <- ""

for (variante in variantes) {
  resultados <- obtener_ranking_phenotypic_score(variante)
  
  if (length(resultados$ranking_medio) > 0) {
    ranking_medio <- mean(resultados$ranking_medio)
  } else {
    ranking_medio <- NA
  }
  
  if (length(resultados$phenotypic_score_medio) > 0) {
    phenotypic_score_medio <- mean(resultados$phenotypic_score_medio)
  } else {
    phenotypic_score_medio <- NA
  }

  ranking_medio_total <- c(ranking_medio_total, ranking_medio)
  phenotypic_score_medio_total <- c(phenotypic_score_medio_total, phenotypic_score_medio)

  if (resultados$ranking_max > ranking_max_total) {
    ranking_max_total <- resultados$ranking_max
    phenotypic_score_max_total <- resultados$phenotypic_score_max
    data_frame_max_total <- resultados$data_frame_max
  }
}

# Crear un data frame con los resultados
resultados_df <- data.frame(
  Variante = variantes,
  Ranking_Medio = ranking_medio_total,
  Phenotypic_Score_Medio = phenotypic_score_medio_total
)

print(resultados_df)
cat("\n")
cat("La variante con el ranking más alto y el phenotypic score más alto se encuentra en el data frame:", data_frame_max_total)

library(ggplot2)

# Definir los colores para cada variante
colores <- c("PTGER2" = "lightblue", "ADRB2" = "lightblue", "HNMT" = "lightblue", "TBX21" = "lightblue", "PLA2G7" = "lightblue",
             "SLC27A4" = "darkblue", "CARD10" = "darkblue", "RIC1" = "darkblue", "GP9" = "darkblue", "IL21R" = "darkblue")

# Función para ordenar el phenotypic score de mayor a menor
ordenar_phenotypic_score <- function(df) {
  df$Phenotypic_Score <- factor(df$Phenotypic_Score, levels = rev(unique(df$Phenotypic_Score)))
  df
}

# Gráfico de barras para datos_Sin_HPOplusA
ggplot(ordenar_phenotypic_score(datos_Sin_HPOplusA), aes(x = Variante, y = Phenotypic_Score, fill = Variante)) +
  geom_bar(stat = "identity") +
  scale_fill_manual(values = colores) +
  labs(title = "Phenotypic Score de las variantes en datos_Sin_HPOplusA", x = "Variante", y = "Phenotypic Score")

# Gráfico de barras para datos_AsthmaplusA
ggplot(ordenar_phenotypic_score(datos_AsthmaplusA), aes(x = Variante, y = Phenotypic_Score, fill = Variante)) +
  geom_bar(stat = "identity") +
  scale_fill_manual(values = colores) +
  labs(title = "Phenotypic Score de las variantes en datos_AsthmaplusA", x = "Variante", y = "Phenotypic Score")

# Gráfico de barras para datos_Asthma_ARSplusA
ggplot(ordenar_phenotypic_score(datos_Asthma_ARSplusA), aes(x = Variante, y = Phenotypic_Score, fill = Variante)) +
  geom_bar(stat = "identity") +
  scale_fill_manual(values = colores) +
  labs(title = "Phenotypic Score de las variantes en datos_Asthma_ARSplusA", x = "Variante", y = "Phenotypic Score")

# Gráfico de barras para datos_Asthma_ARPplusA
ggplot(ordenar_phenotypic_score(datos_Asthma_ARPplusA), aes(x = Variante, y = Phenotypic_Score, fill = Variante)) +
  geom_bar(stat = "identity") +
  scale_fill_manual(values = colores) +
  labs(title = "Phenotypic Score de las variantes en datos_Asthma_ARPplusA", x = "Variante", y = "Phenotypic Score")

# Gráfico de barras para datos_Ab_Resp_systemplusA
ggplot(ordenar_phenotypic_score(datos_Ab_Resp_systemplusA), aes(x = Variante, y = Phenotypic_Score, fill = Variante)) +
  geom_bar(stat = "identity") +
  scale_fill_manual(values = colores) +
  labs(title = "Phenotypic Score de las variantes en datos_Ab_Resp_systemplusA", x = "Variante", y = "Phenotypic Score")

# Gráfico de barras para datos_Asthma_Ig_hypersplusA
ggplot(ordenar_phenotypic_score(datos_Asthma_Ig_hypersplusA), aes(x = Variante, y = Phenotypic_Score, fill = Variante)) +
  geom_bar(stat = "identity") +
  scale_fill_manual(values = colores) +
  labs(title = "Phenotypic Score de las variantes en datos_Asthma_Ig_hypersplusA", x = "Variante", y = "Phenotypic Score")

# Gráfico de barras para datos_Asthma_Abnormality_IgsystemplusA
ggplot(ordenar_phenotypic_score(datos_Asthma_Abnormality_IgsystemplusA), aes(x = Variante, y = Phenotypic_Score, fill = Variante)) +
  geom_bar(stat = "identity") +
  scale_fill_manual(values = colores) +
  labs(title = "Phenotypic Score de las variantes en datos_Asthma_Abnormality_IgsystemplusA", x = "Variante", y = "Phenotypic Score")

# Definir lista_data_frames
lista_data_frames <- list(datos_Sin_HPOplusA, datos_AsthmaplusA, datos_Asthma_ARSplusA, datos_Asthma_ARPplusA,
                          datos_Ab_Resp_systemplusA, datos_Asthma_Ig_hypersplusA, datos_Asthma_Abnormality_IgsystemplusA)

# Asignar nombres a los data frames
names(lista_data_frames) <- c("datos_Sin_HPOplusA", "datos_AsthmaplusA", "datos_Asthma_ARSplusA", "datos_Asthma_ARPplusA",
                              "datos_Ab_Resp_systemplusA", "datos_Asthma_Ig_hypersplusA", "datos_Asthma_Abnormality_IgsystemplusA")
# Obtener las variantes que desaparecen del ranking de las 30 primeras en cada data frame y marcarlas con el color correspondiente
variantes_desaparecidas <- list()
for (i in 1:length(lista_data_frames)) {
  df <- lista_data_frames[[i]]
  variantes_desaparecidas[[i]] <- setdiff(variantes, df$Variante)

  # Gráfico de barras para cada data frame con las variantes desaparecidas marcadas
  p <- ggplot(ordenar_phenotypic_score(df), aes(x = Variante, y = Phenotypic_Score, fill = Variante)) +
    geom_bar(stat = "identity") +
    scale_fill_manual(values = colores) +
    labs(title = paste("Phenotypic Score de las variantes en", names(lista_data_frames)[i]), x = "Variante", y = "Phenotypic Score")

  if (length(variantes_desaparecidas[[i]]) > 0) {
    p <- p + geom_text(data = data.frame(Variante = variantes_desaparecidas[[i]], Phenotypic_Score = 0),
                       aes(x = Variante, y = Phenotypic_Score, label = Variante),
                       color = "red", vjust = -0.5, size = 3)
  }

  print(p)
}

# Definir lista_data_frames
lista_data_frames <- list(datos_Sin_HPOplusA, datos_AsthmaplusA, datos_Asthma_ARSplusA, datos_Asthma_ARPplusA,
                          datos_Ab_Resp_systemplusA, datos_Asthma_Ig_hypersplusA, datos_Asthma_Abnormality_IgsystemplusA)

# Asignar nombres a los data frames
names(lista_data_frames) <- c("datos_Sin_HPOplusA", "datos_AsthmaplusA", "datos_Asthma_ARSplusA", "datos_Asthma_ARPplusA",
                              "datos_Ab_Resp_systemplusA", "datos_Asthma_Ig_hypersplusA", "datos_Asthma_Abnormality_IgsystemplusA")


# Crear una función para obtener el ranking medio y el phenotypic score más alto de cada variante en los data frames
obtener_ranking_phenotypic_score <- function(variante) {
  ranking_medio <- c()
  ranking_min <- Inf
  phenotypic_score_max <- -Inf
  ranking_min_data_frames <- character()
  phenotypic_score_max_data_frames <- character()

  for (i in 1:length(lista_data_frames)) {
    df <- lista_data_frames[[i]]
    if (variante %in% df$Variante) {
      ranking <- df[df$Variante == variante, "Ranking"]
      ranking_medio <- c(ranking_medio, mean(ranking, na.rm = TRUE))
      phenotypic_score <- df[df$Variante == variante, "Phenotypic_Score"]
      phenotypic_score_max <- max(phenotypic_score, phenotypic_score_max, na.rm = TRUE)
      
      # Identificar los data frames donde se alcanza el valor mínimo de ranking
      min_ranking_data_frames <- names(lista_data_frames)[which(df$Variante == variante & df$Ranking == min(ranking, na.rm = TRUE))]
      ranking_min_data_frames <- c(ranking_min_data_frames, min_ranking_data_frames)
      
      # Identificar los data frames donde se alcanza el valor máximo de phenotypic score
      max_phenotypic_score_data_frames <- names(lista_data_frames)[which(df$Variante == variante & df$Phenotypic_Score == phenotypic_score_max)]
      phenotypic_score_max_data_frames <- c(phenotypic_score_max_data_frames, max_phenotypic_score_data_frames)
    }
  }

  list(
    ranking_medio = ranking_medio,
    ranking_min = min(ranking_min),
    phenotypic_score_max = phenotypic_score_max,
    ranking_min_data_frames = ranking_min_data_frames,
    phenotypic_score_max_data_frames = phenotypic_score_max_data_frames
  )
}

# Obtener el ranking medio y el phenotypic score más alto para cada variante en todos los data frames
ranking_medio_total <- c()
ranking_min_total <- c()
phenotypic_score_max_total <- c()
for (variante in variantes) {
  resultados_variante <- obtener_ranking_phenotypic_score(variante)

  if (length(resultados_variante$ranking_medio) == length(lista_data_frames)) {
    ranking_medio_total <- c(ranking_medio_total, mean(resultados_variante$ranking_medio))
    ranking_min_total <- c(ranking_min_total, resultados_variante$ranking_min)
    phenotypic_score_max_total <- c(phenotypic_score_max_total, max(resultados_variante$phenotypic_score_max))
    
    # Imprimir el ranking medio, el ranking mínimo y el phenotypic score más alto para cada variante
    cat("Variante:", variante, "\n")
    cat("Ranking Medio:", mean(resultados_variante$ranking_medio), "\n")
    cat("Ranking Mínimo:", resultados_variante$ranking_min, "\n")
    cat("Phenotypic Score Máximo:", max(resultados_variante$phenotypic_score_max), "\n")
    
    # Imprimir los data frames donde se alcanzan los valores mínimos de ranking
    cat("Ranking Mínimo en:", paste(resultados_variante$ranking_min_data_frames, collapse = ", "), "\n")
    
    # Imprimir los data frames donde se alcanza el phenotypic score máximo
    cat("Phenotypic Score Máximo en:", paste(resultados_variante$phenotypic_score_max_data_frames, collapse = ", "), "\n")
    
    cat("\n")
  }
}

# Gráfico de dispersión del ranking y puntaje fenotípico
ggplot(datos_Decreased_T4_Abnormal_circulating_T4_concentrationplusA, aes(x = Ranking, y = Phenotypic_Score)) +
  geom_point(color = "steelblue") +
  labs(title = "Relación entre Ranking y Phenotypic Score en Decreased_T4_Abnormal_circulating_T4_concentrationplusA", x = "Ranking", y = "Phenotypic Score")

# Combinar los conjuntos de datos
datos_combinados <- rbind(datos_AsthmaplusA, datos_Asthma_ARSplusA, datos_Asthma_ARPplusA)

# Gráfico de líneas del puntaje fenotípico
ggplot(datos_combinados, aes(x = Variante, y = Phenotypic_Score, color = Variante)) +
  geom_line() +
  labs(title = "Variación del Phenotypic Score en diferentes conjuntos de datos", x = "Variante", y = "Phenotypic Score") +
  theme(legend.position = "none")



"""COMPARACIONES ESTADISTICAS"""